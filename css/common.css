/* 기본적으로 인라인 요소, 블럭 요소는 상관없이 세로 너비가 최대한 줄어들려고한다. */
/* 1. 블록 요소 (display: block;)의 가로 너비
블록 요소는 기본적으로 부모 요소의 사용 가능한 가로 공간을 최대한 채우려고 합니다. 즉, 부모 요소의 너비만큼 확장됩니다.
2. 인라인 요소 (display: inline;)의 가로 너비
인라인 요소는 오직 자신의 내용물(콘텐츠)의 너비만큼만 공간을 차지합니다. 내용물이 길어지면 가로 너비도 함께 늘어나고, 짧아지면 줄어듭니다. */
/* common styles */
body {
  color: #333;
  /* 폰트사이즈를 지정하지 않으면 기본값이 16px */
  font-size: 16px; 
  /* 폰트 두께는 100부터 900 지정가능능 */
  font-weight: 400;
  /* 줄간격을 지정 */
  line-height: 1.4;
  font-family: 'Nanum Gothic', sans-serif;
  /* height: 3000px; */
}

img {
  /* 이미지의 기본 display 속성은 inline이므로 block으로 변경 */
  display: block;
}

a {
  /* 링크 영역에 밑줄 제거 */
  text-decoration: none;
}

.inner {
  /* 페이지의 너비를 지정 */
  width: 1100px;
  /* 중앙 정렬을 위해 자동 마진 */
  margin: 0 auto;
  position: relative;
}

.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  display: block;
  transition: 0.4s;
}

/* 선택자 우선 순위에 따라 .btn은 10점, .btn:hover는 20점, .btn.btn--reverse는 30점이다. */
.btn:hover {
  background-color: #333;
  color: #fff;
} 

.btn.btn--reverse {
  background-color: #333;
  color: #fff;
}

.btn.btn--reverse:hover {
  background-color: transparent;
  color: #333;
}

.btn.btn--brown {
  color: #592B18;
  border-color: #592B18;
}

.btn.btn--brown:hover {
  color: #FFF;
  background-color: #592B18;
}

.btn.btn--gold {
  color: #D9AA8A;
  /* background-color: #D9AA8A; */
}

.btn.btn--gold:hover {
  color: #fff;
  background-color: #D9AA8A;
}

.btn.btn--white {
  color: #fff;
  border: 2px solid #fff;
  /* background-color: #FFF; */
}

.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}

.back-to-position {
  opacity: 0;
  transition: 1s;
}

.back-to-position.to-left {
  transform: translateX(150px);
}

.back-to-position.to-right {
  transform: translateX(-150px);
}

.show .back-to-position {
  opacity: 1;
  transform: translateX(0);
}

.show .back-to-position.delay-0 {
  transition-delay: 0s;
}

.show .back-to-position.delay-1 {
  transition-delay: 0.3s;
}

.show .back-to-position.delay-2 {
  transition-delay: 0.6s;
}

.show .back-to-position.delay-3 {
  transition-delay: 0.9s;
}

/* header 스타일 */
header {
  /* position: relative; */
  /* 블록 요소는 가로 너비가 최대한 늘어나려고 시도하지만 fixed와 absolute는 가로 너비가 최소한으로 줄어들려고 한다.*/
  /* width: 100%;를 사용해 문제를 해결한다. */
  width: 100%;
  position: fixed;
  top: 0;
  background-color: #f6f5f0;
  /* 주변에 테두리 생성 */
  border-bottom: 1px solid #c8c8c8;
  z-index: 9;
}

/* header > .inner에서 height는 스타벅스 이미지가 차지하는 부분의 높이를 말한다.*/
header > .inner {
  /* width: 1100px; */
  /* 중앙 정렬을 위해 자동 마진 */
  height: 120px;
  /* margin: 0 auto; */
  /* background-color: orange; */
  /* position: relative; */
}

header .logo {
  height: 75px;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  /* 중앙 정렬을 위해 자동 마진 */
  margin: auto 0;
  /* 로고 이미지 숨기기 */
  /* display: none; */
}

header .sub-menu {
  position: absolute;
  top: 12px;
  right: 0;
  display: flex;
}

header .sub-menu ul.menu {
  /* 메뉴의 기본 폰트 Arial이 없으면 sans-serif가 적용됨*/
  font-family: Arial, sans-serif;
  /* 수평으로 구성하기 */
  display: flex;
}

header .sub-menu ul.menu li {
 position: relative;
}


/* 메뉴에 구분선 만들기기 */
/* li::before는 가상 요소 선택자로 html에서 요소를 직접적으로 추가하지 않고 css선에서 가상의 요소를 만들어 컨텐츠를 추가하는데
실제로 어떤 내용이 들어가는 것이 아니라 요소가 단순히 동작시키기 위해서 display: block;을 추가한다. */
header .sub-menu ul.menu li::before {
  content: "";
  /* disply: block;는 가상 요소는 기본적으로 inline이므로 block으로 변경, position: absolute;를 사용해서 생략가능 */
  display: block;
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  /* position: absolute;를 사용하면 항상 부모요소에 position값이 반드시 있어야 한다.  */
  position: absolute;
  top: 0;
  bottom: 0;
  /* 0은 생략가능 */
  margin: auto 0;
}

header .sub-menu ul.menu li:first-child::before {
  /* 첫번째 메뉴는 구분선 제거 */
  display: none;
}

header .sub-menu ul.menu li a {
  /* background-color: red; */
  font-size: 12px;
  padding: 11px 16px;
  display: block;
  color: #656565;
}

/* 가상 클래스 선택자 */
header .sub-menu ul.menu li a:hover {
  color: #000;
}

header .sub-menu .search {
  /* background-color: red; */
  height: 34px;
  position: relative;
}

header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none;
  background-color: #fff;
  color: #777;
  font-size: 12px;
  transition: width 0.4s;
}

header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}

header .sub-menu .search .material-symbols-outlined {
  height: 24px;
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto; 
  /* .4s앞에 all은 생략되어 있다. */
  /* transition: all.4s; */
  transition: .4s;
}

header .sub-menu .search.focused .material-symbols-outlined {
  opacity: 0;
}

header .main-menu {
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  display: flex;
}

header .main-menu .item {

}

header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}

header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  left: 0;
  display: none;
}

header .main-menu .item:hover .item__contents {
  display: block;

}

header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
  /* 메뉴의 높이를 지정 만약 하지않으면 컨텐츠에 맞춰서 자동으로 된다 */
  /* height: 200px; */
}

header .main-menu .item .item__contents .contents__menu > ul{
  /* ul태그의 내용들이 수평으로 정렬 */
  display: flex;
  padding: 20px 0;
}

header .main-menu .item .item__contents .contents__menu > ul > li{
  width: 220px;
}

header .main-menu .item .item__contents .contents__menu > ul > li h4{
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}

/* header .main-menu .item .item__contents .contents__menu > ul > li ul{
  
} */

header .main-menu .item .item__contents .contents__menu > ul > li ul li {
 padding: 5px 0;
 font-size: 12px;
 color: #999;
 /* 마우스 커서가 화살표에서 손가락모양으로 변경 */
 cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url("../images/main_menu_pattern.jpg");
}

header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
  /* font-size: 12px; */
}

header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}

/* badges 요소들 */
header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}

header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.15);
  cursor: pointer;
}

/* footer */
/* 태그 선택자 */
footer {
  background-color: #272727;
  border-top: 1px solid #333;
}

/* 클래스 선택자 */
footer .inner {
  /* 위에서 부터 시계방향 */
  padding: 40px 0 60px 0;
}

footer .menu {
  /* 내용들이 가운데 정렬이 될 수 있도록 */
  display: flex;
  justify-content: center;
}

footer .menu li {
  position: relative;
}

footer .menu li::before {
  /* before라는 가상 요소 선택자를 사용할땐 content라는 속성이 당연히 있어야 한다.  */
  content: "";
  width: 3px;
  height: 3px;
  background-color: #555;
  /* position: absolute; 나 position: fixed;라는 요소가 사용되는 요소는 display: block;으로 자동으로 바뀐다.  */
  position: absolute;
  top: 0;
  bottom: 0;
  right: -1px;
  margin: auto;
}

footer .menu li:last-child::before {
  display: none;
}

footer .menu li a {
  color: #ccc;
  font-weight: 700;
  /* 인라인 요소는 마진과 패딩이라는 속성의 위, 아래 값을 정상적으로 사용할 수 없다.
  그래서 우리는 패딩의 위, 아래값을 a요소가 잘 쓸 수 있돌록 디스플레이 값을 인라인에서 display: block;을 사용해서 블록요소로 바꿔준다. */
  padding: 15px;
  display: block;
}

footer .menu li a.green {
  color: #669900;
}

footer .btn-group {
  /* 내용들이 가운데 정렬이 될 수 있도록 */
  display: flex;
  justify-content: center;
}

footer .btn-group .btn {
  font-size: 12px;
  margin-right: 10px;
}

footer .btn-group .btn:last-child {
  margin-right: 0;
}

footer .info {
  margin-top: 30px;
  text-align: center;
}

footer .info span {
  margin-right: 20px;
  color: #999;
  font-size: 12px;
}

footer .info span:last-child {
  margin-right: 0;
}

footer .copyright {
  color: #999;
  font-size: 12px;
  text-align: center;
  margin-top: 12px;
}

footer .logo {
  /* top:30 좌,우:auto bottom:0 */
  margin: 30px auto 0;
  /* img요소가 display: bolck; + margin: 30px auto 0;인 경우는 width 속성이 없어도 가운데 정렬이 된다. */
}